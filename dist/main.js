(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(15),o=t.n(r),a=t(645),c=t.n(a)()(o());c.push([e.id,"body {\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n}\r\n\r\n.nav-bar {\r\n  background-color: hsl(0, 100%, 12%);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.nav-bar button {\r\n  background-color: hsl(0, 100%, 12%);\r\n  border: none;\r\n  font-size: 2rem;\r\n}\r\n\r\n.showcase {\r\n  width: 100%;\r\n  height: 80vh;\r\n  box-shadow: inset 120px 100px 250px #000000, inset -120px -100px 250px #000000;\r\n  padding: 5rem 4rem;\r\n}\r\n\r\n.showcase p{\r\n    width: 50%;\r\n    color: white;\r\n}\r\n\r\n.tab {\r\n  cursor: pointer;\r\n  padding: 0.5rem 2rem;\r\n\r\n}\r\n.tab-content {\r\n  height: 30vh;\r\n}\r\n\r\n.show {\r\n  border-bottom: 4px solid red;\r\n}\r\n\r\n.icons i{\r\n  margin: 0 1rem;\r\n  font-size: 24px;\r\n}\r\n.footer {\r\n  background-color: hsl(0, 100%, 12%);\r\n  color: white;\r\n}\r\n.fa-heart {\r\n  color: red;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,WAAW;AACb;;AAEA;EACE,mCAAmC;EACnC,kBAAkB;EAClB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,mCAAmC;EACnC,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,8EAA8E;EAC9E,kBAAkB;AACpB;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;EACE,eAAe;EACf,oBAAoB;;AAEtB;AACA;EACE,YAAY;AACd;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;AACA;EACE,mCAAmC;EACnC,YAAY;AACd;AACA;EACE,UAAU;AACZ",sourcesContent:["body {\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n}\r\n\r\n.nav-bar {\r\n  background-color: hsl(0, 100%, 12%);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.nav-bar button {\r\n  background-color: hsl(0, 100%, 12%);\r\n  border: none;\r\n  font-size: 2rem;\r\n}\r\n\r\n.showcase {\r\n  width: 100%;\r\n  height: 80vh;\r\n  box-shadow: inset 120px 100px 250px #000000, inset -120px -100px 250px #000000;\r\n  padding: 5rem 4rem;\r\n}\r\n\r\n.showcase p{\r\n    width: 50%;\r\n    color: white;\r\n}\r\n\r\n.tab {\r\n  cursor: pointer;\r\n  padding: 0.5rem 2rem;\r\n\r\n}\r\n.tab-content {\r\n  height: 30vh;\r\n}\r\n\r\n.show {\r\n  border-bottom: 4px solid red;\r\n}\r\n\r\n.icons i{\r\n  margin: 0 1rem;\r\n  font-size: 24px;\r\n}\r\n.footer {\r\n  background-color: hsl(0, 100%, 12%);\r\n  color: white;\r\n}\r\n.fa-heart {\r\n  color: red;\r\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(o[c]=!0)}for(var i=0;i<e.length;i++){var s=[].concat(e[i]);r&&o[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),n.push(s))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,o=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],r=!0,o=!1,a=void 0;try{for(var c,i=e[Symbol.iterator]();!(r=(c=i.next()).done)&&(t.push(c.value),!n||t.length!==n);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==i.return||i.return()}finally{if(o)throw a}}return t}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],c=o[3];if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(c)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),d="/*# ".concat(s," */"),l=c.sources.map((function(e){return"/*# sourceURL=".concat(c.sourceRoot||"").concat(e," */")}));return[a].concat(l).concat([d]).join("\n")}return[a].join("\n")}},379:(e,n,t)=>{var r,o=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),a=[];function c(e){for(var n=-1,t=0;t<a.length;t++)if(a[t].identifier===e){n=t;break}return n}function i(e,n){for(var t={},r=[],o=0;o<e.length;o++){var i=e[o],s=n.base?i[0]+n.base:i[0],d=t[s]||0,l="".concat(s," ").concat(d);t[s]=d+1;var u=c(l),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==u?(a[u].references++,a[u].updater(p)):a.push({identifier:l,updater:h(p,n),references:1}),r.push(l)}return r}function s(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=t.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var c=o(e.insert||"head");if(!c)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");c.appendChild(n)}return n}var d,l=(d=[],function(e,n){return d[e]=n,d.filter(Boolean).join("\n")});function u(e,n,t,r){var o=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=l(n,o);else{var a=document.createTextNode(o),c=e.childNodes;c[n]&&e.removeChild(c[n]),c.length?e.insertBefore(a,c[n]):e.appendChild(a)}}function p(e,n,t){var r=t.css,o=t.media,a=t.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var A=null,f=0;function h(e,n){var t,r,o;if(n.singleton){var a=f++;t=A||(A=s(n)),r=u.bind(null,t,a,!1),o=u.bind(null,t,a,!0)}else t=s(n),r=p.bind(null,t,n),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else o()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=i(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var o=c(t[r]);a[o].references--}for(var s=i(e,n),d=0;d<t.length;d++){var l=c(t[d]);0===a[l].references&&(a[l].updater(),a.splice(l,1))}t=s}}}},749:(e,n,t)=>{e.exports=t.p+"313b0da5ef1f40b1a057.png"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e=t(749);const n=document.querySelector("#content"),r=(document.querySelector(".tab-content"),e=>{const n=document.createElement("span");n.classList.add("d-flex","justify-content-start"),n.textContent=e});var o=t(379),a=t.n(o),c=t(426);a()(c.Z,{insert:"head",singleton:!1}),c.Z.locals,(()=>{const e=document.createElement("nav");e.classList.add("nav-bar");const t=document.createElement("div");t.textContent="JAVAHOUSE",t.style.color="white";const r=document.createElement("button");r.innerHTML='<i class="fas fa-bars"></i>',r.style.color="white",e.appendChild(t),e.appendChild(r),n.appendChild(e)})(),(()=>{const t=document.createElement("div");t.classList.add("showcase");const r=document.createElement("h1");r.classList.add("head"),r.textContent="JAVAHOUSE";const o=document.createElement("p");o.textContent="Come and experience exquisite delicacies at JAVA HOUSE at fantastic prices. Available for pickup at branches or deliveries from Jumia food, Glovo and Uber Eats";const a=document.createElement("button");a.classList.add("btn","btn-danger","font-weight-bold"),a.textContent="ORDER HERE",r.style.color="white",t.style.background=`url(${e})`,t.style.backgroundRepeat="no-repeat",t.style.backgroundSize="cover",t.appendChild(r),t.appendChild(o),t.appendChild(a),n.appendChild(t)})(),(()=>{const e=document.createElement("div");e.classList.add("tabs","d-flex","justify-content-between","mx-auto","w-50");const t=document.createElement("h2");t.classList.add("tab","show"),t.innerHTML="Menu";const r=document.createElement("h2");r.classList.add("tab"),r.innerHTML="About";const o=document.createElement("h2");o.classList.add("tab"),o.innerHTML="Contact";const a=document.createElement("div");a.classList.add("tab-content","mx-auto","w-50"),e.appendChild(t),e.appendChild(r),e.appendChild(o),n.appendChild(e),n.appendChild(a)})(),r(),(()=>{const e=document.createElement("div");e.classList.add("footer","text-center","py-4"),e.innerHTML='Made with <i class="far fa-heart"></i> by Rose Sumba',n.appendChild(e)})();const i=document.querySelector(".tab-content"),s=document.querySelectorAll(".tab"),d=[r,()=>{const e=document.querySelector(".tab-content"),n=document.createElement("div");n.classList.add("text-center"),n.textContent="Java House, commonly referred to as ‘Nairobi Java’,opened itsfirst store in 1999\nat Adam’s Arcade in Nairobi. With the aim of introducing gourmet",e.appendChild(n)},()=>{const e=document.querySelector(".tab-content"),n=document.createElement("div");n.classList.add("text-center");const t=document.createElement("p");t.textContent="Reach us though";const r=document.createElement("div");r.classList.add("d-flex","justify-content-center","icons");const o=document.createElement("div");o.innerHTML='<i class="fab fa-twitter"></i>';const a=document.createElement("div");a.innerHTML='<i class="fab fa-facebook-square"></i>';const c=document.createElement("div");c.innerHTML='<i class="fab fa-instagram"></i>',n.appendChild(t),n.appendChild(r),r.appendChild(o),r.appendChild(a),r.appendChild(c),e.appendChild(n)}],l=e=>{i.innerHTML="",s.forEach((e=>{e.classList.remove("show")})),s[e].classList.add("show"),d[e]()};for(let e=0;e<s.length;e+=1)s[e].onclick=l.bind(null,e)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,